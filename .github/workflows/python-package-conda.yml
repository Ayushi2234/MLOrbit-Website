name: Python Package using Conda

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

jobs:
  build-linux:
    name: Build and Test on Linux
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Fetch only the latest commit for faster performance

      # Step 2: Set up Miniconda and create the environment
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: mlorbit_backend/environment.yml  # Path to your environment.yml
          auto-activate-base: false  # Do not auto-activate the base environment
          activate-environment: mlorbit_backend  # Name of the environment to activate
          python-version: 3.10  # Specify Python version (optional, already in environment.yml)
          conda-version: 4.14.0  # Specify a stable Conda version
          channels: conda-forge  # Ensure conda-forge is used

      # Step 3: Verify the Conda environment
      - name: Verify Conda Environment
        run: |
          conda info  # Displays Conda configuration
          conda list  # Lists all installed packages in the environment

      # Step 4: Lint the backend code with flake8
      - name: Lint with flake8
        run: |
          # Lint for syntax errors and specific flake8 error codes
          flake8 mlorbit_backend/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Lint for code style issues with specific complexity and line length
          flake8 mlorbit_backend/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Step 5: Run backend tests with pytest and generate coverage report
      - name: Run Pytest
        run: |
          pytest mlorbit_backend/ --cov=mlorbit_backend/ --cov-report=xml  # Runs tests and generates coverage report

      # Step 6: Upload coverage report as an artifact (optional)
      - name: Upload Coverage Report
        if: always()  # Upload regardless of test success or failure
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: mlorbit_backend/coverage.xml  # Path to the coverage report
