name: CI/CD Pipeline

# Trigger the workflow on push or pull request events to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test Backend and Frontend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9]
        node-version: [16.x]

    env:
      PROJECT_NAME: ${{ github.repository }}
      BRANCH_NAME: ${{ github.ref_name }}
      RUNNER_OS: ${{ runner.os }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # -------------------
      # Backend Setup and Testing
      # -------------------

      # Step 2: Set Up Python
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Cache pip dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/mlorbit_backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install Backend Dependencies
      - name: Install Backend Dependencies
        working-directory: mlorbit_backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5: Run Backend Tests
      - name: Run Backend Tests
        working-directory: mlorbit_backend
        run: |
          pip install pytest  # Ensure pytest is installed
          pytest || echo "No tests found, skipping backend tests."

      # -------------------
      # Frontend Setup and Testing
      # -------------------

      # Step 6: Set Up Node.js
      - name: Set Up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: mlorbit_frontend/package-lock.json

      # Step 7: Cache npm dependencies
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/mlorbit_frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      # Step 8: Install Frontend Dependencies
      - name: Install Frontend Dependencies
        working-directory: mlorbit_frontend
        run: npm install

      # Step 9: Run Frontend Tests
      - name: Run Frontend Tests
        working-directory: mlorbit_frontend
        run: npm test -- --watchAll=false || echo "No frontend tests found, skipping tests."

      # Step 10: Build Frontend
      - name: Build Frontend
        working-directory: mlorbit_frontend
        run: npm run build

      # -------------------
      # Display Environment Info (Optional)
      # -------------------
      - name: Display Environment Info
        run: |
          echo "üöÄ Repository: $PROJECT_NAME"
          echo "üêß Branch: $BRANCH_NAME"
          echo "üñ•Ô∏è Runner OS: $RUNNER_OS"

      # -------------------
      # Upload Build Artifacts (Optional)
      # -------------------

      - name: Upload Frontend Build
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: mlorbit_frontend/build/

      - name: Upload Backend Logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: backend-logs
          path: mlorbit_backend/logs/ || echo "No logs found."
